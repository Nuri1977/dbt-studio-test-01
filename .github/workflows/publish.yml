name: Publish

on:
  push:
    branches:
      - dev

jobs:
  publish-mac:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: |
          npm install
          npm run postinstall

      - name: Build project
        run: npm run build

      - name: Publish for macOS
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_ID_PASS }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
        run: |
          npm exec electron-builder -- --publish always --mac

  publish-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: |
          npm install
          npm run postinstall

      - name: Build project
        run: npm run build

      - name: Publish unsigned Windows artifacts
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npm exec electron-builder -- --publish always --win

      - name: Download AzureSignTool
        run: |
          dotnet tool install --global AzureSignTool

      - name: Sign NSIS installer with Azure Code Signing
        env:
          AZURE_KEY_VAULT_URI: https://eus.codesigning.azure.net/
          AZURE_CERTIFICATE_NAME: dbt-studio
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        run: |
          $env:Path += ";$env:USERPROFILE\.dotnet\tools"
          $installer = Get-ChildItem "release\build\*Setup*.exe" | Select-Object -First 1
          AzureSignTool sign `
            -kvu "$env:AZURE_KEY_VAULT_URI" `
            -kvc "$env:AZURE_CERTIFICATE_NAME" `
            -kvt "$env:AZURE_TENANT_ID" `
            -kvi "$env:AZURE_CLIENT_ID" `
            -kvs "$env:AZURE_CLIENT_SECRET" `
            -tr http://timestamp.digicert.com `
            -td sha256 -fd sha256 `
            $installer.FullName

      - name: Publish signed Windows artifacts
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npm exec electron-builder -- --publish always --win --config.win.sign=false

  publish-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: |
          npm install
          npm run postinstall

      - name: Build project
        run: npm run build

      - name: Publish for Linux
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npm exec electron-builder -- --publish always --linux deb rpm
