name: Publish

on:
  push:
    branches:
      - dev

jobs:
  publish-mac:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: |
          npm install
          npm run postinstall

      - name: Build project
        env:
          TRACK_URL: ${{ secrets.TRACK_URL }}
        run: npm run build

      - name: Publish for macOS
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_ID_PASS }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
        run: |
          npm exec electron-builder -- --publish always --mac

  publish-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: |
          npm install
          npm run postinstall

      - name: Build project
        env:
          TRACK_URL: ${{ secrets.TRACK_URL }}
        run: npm run build

      - name: Build and publish Windows artifacts (unsigned)
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npm exec electron-builder -- --publish always --win

      - name: Download release assets
        run: |
          mkdir unsigned
          gh release download --repo ${{ github.repository }} --pattern "*.exe" --pattern "*.dll" --dir unsigned
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Sign Windows binaries
        uses: azure/trusted-signing-action@v0
        with:
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          endpoint: https://eus.codesigning.azure.net/
          trusted-signing-account-name: RosettaLabs
          certificate-profile-name: dbt-studio
          files-folder: unsigned
          files-folder-filter: exe,dll
          file-digest: SHA256
          timestamp-rfc3161: http://timestamp.acs.microsoft.com
          timestamp-digest: SHA256

      - name: Re-upload signed artifacts to GitHub Release
        run: |
          gh release upload ${{ github.ref_name }} unsigned/*.exe unsigned/*.dll --clobber
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

  publish-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: |
          npm install
          npm run postinstall

      - name: Build project
        env:
          TRACK_URL: ${{ secrets.TRACK_URL }}
        run: npm run build

      - name: Publish for Linux
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npm exec electron-builder -- --publish always --linux deb rpm
